{"version":3,"sources":["Addbutton.jsx","Usersform.jsx","Formfield.jsx","App.js","reportWebVitals.js","index.js"],"names":["Addbutton","props","users","length","className","style","borderRadius","color","marginLeft","type","Usersform","onSubmit","onAddButton","children","map","user","index","name","value","onChange","event","marginRight","Formfield","placeholder","baseUrl","process","numRegex","App","React","useState","result","usersQuery","roundQuery","nopQuery","lbQuery","ubQuery","friends","tags","selectedTags","Query","updateQuery","onNumberChange","target","prevState","test","onUserAddButton","updatedUsers","preventDefault","onUserChange","newUsers","ResultTable","id","problems","problem","contestId","href","rating","solved","InvalidHandles","invalidHandles","invalidstr","forEach","invalidhandle","substr","Msg","isless","axios","get","then","response","opt","data","tag","label","animatedComponents","makeAnimated","tagsQuery","friendsQuery","trim","friend","url","fetchResults","isMulti","autosize","isSearchable","components","selectedOptions","options","marginTop","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d89e332d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction Addbutton(props) {\r\n    if (props.users.length < 3)\r\n        return (\r\n            <button\r\n                className=\"btn btn-warning btn-sm\"\r\n                style={{\r\n                    borderRadius: `100%`,\r\n                    color: `white`,\r\n                    marginLeft: `5px`,\r\n                }}\r\n                type=\"submit\"\r\n            >\r\n                <bold>+</bold>\r\n            </button>\r\n        );\r\n    else return <></>;\r\n}\r\n\r\nexport default Addbutton;\r\n","import React from \"react\";\r\nimport AddButton from \"./Addbutton\";\r\nimport \"./App.css\";\r\n\r\nfunction Usersform(props) {\r\n    return (\r\n        <div>\r\n            <form onSubmit={props.onAddButton}>\r\n                {props.children}\r\n\r\n                {props.users.map((user, index) => (\r\n                    <input\r\n                        className=\"handleInput\"\r\n                        name={props.name}\r\n                        key={index}\r\n                        type=\"text\"\r\n                        value={user}\r\n                        onChange={(event) => props.onChange(event, index)}\r\n                        style={{ marginRight: `5px` }}\r\n                    />\r\n                ))}\r\n                <AddButton users={props.users} name={props.name} />\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Usersform;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction Formfield(props) {\r\n    return (\r\n        <div>\r\n            {props.children}\r\n            <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name={props.name}\r\n                value={props.value}\r\n                onChange={props.onChange}\r\n                placeholder=\" Enter number \"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Formfield;\r\n","import React from \"react\";\nimport axios from \"axios\";\nimport makeAnimated from \"react-select/animated\";\nimport \"./App.css\";\nimport Usersform from \"./Usersform\";\n\nimport Formfield from \"./Formfield\";\nimport Select from \"react-select\";\n\nconst baseUrl = `${process.env.PUBLIC_URL}`;\n\nconst numRegex = /^[0-9]+$/;\n\nfunction App() {\n    const [Query, updateQuery] = React.useState({\n        result: null,\n        usersQuery: \"\",\n        roundQuery: \"\",\n        nopQuery: \"\",\n        lbQuery: \"\",\n        ubQuery: \"\",\n        users: [\"\"],\n        friends: [\"\"],\n        tags: [],\n        selectedTags: [],\n    });\n\n    axios.get(`${baseUrl}/tags`).then((response) => {\n        updateQuery((prevState) => {\n            const opt = response.data.map((tag, id) => ({\n                id,\n                value: tag,\n                label: tag,\n            }));\n\n            return {\n                ...prevState,\n                [`tags`]: opt,\n            };\n        });\n    });\n\n    function onNumberChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        updateQuery((prevState) => {\n            if (value === \"\" || numRegex.test(value)) {\n                return {\n                    ...prevState,\n                    [name]: value,\n                };\n            } else {\n                return {\n                    ...prevState,\n                    [name]: \"\",\n                };\n            }\n        });\n    }\n\n    function onTagListChange(selectedOptions) {\n        updateQuery((prevState) => {\n            return {\n                ...prevState,\n                [`selectedTags`]: selectedOptions,\n            };\n        });\n    }\n\n    function fetchResults() {\n        let tagsQuery = \"\";\n        let usersQuery = \"\";\n        let friendsQuery = \"\";\n        Query.selectedTags.forEach((tag) => (tagsQuery += `${tag.label},`));\n        Query.users.forEach((user) => {\n            user = user.trim();\n            if (user.length) usersQuery += `${user},`;\n        });\n        Query.friends.forEach((friend) => {\n            friend = friend.trim();\n            if (friend.length) friendsQuery += `${friend},`;\n        });\n        usersQuery = usersQuery.substr(0, usersQuery.length - 1);\n        friendsQuery = friendsQuery.substr(0, friendsQuery.length - 1);\n\n        const url = `${baseUrl}/get/?handles=${usersQuery}&friends=${friendsQuery}&tags=${tagsQuery}&ROUND=${Query.roundQuery}&nop=${Query.nopQuery}&lowerBound=${Query.lbQuery}&upperBound=${Query.ubQuery}`;\n        const request = axios.get(url);\n        // console.log(url);\n        request.then((response) =>\n            updateQuery((prevState) => {\n                return {\n                    ...prevState,\n                    [`result`]: response.data,\n                };\n            })\n        );\n    }\n\n    function onSearchSubmit(event) {\n        fetchResults();\n        event.preventDefault();\n    }\n\n    function onUserAddButton(event, name) {\n        updateQuery((prevState) => {\n            const updatedUsers = [...prevState[name], \"\"];\n            return {\n                ...prevState,\n                [name]: updatedUsers,\n            };\n        });\n        event.preventDefault();\n    }\n\n    function onUserChange(event, index) {\n        const name = event.target.name;\n        const value = event.target.value;\n        updateQuery((prevState) => {\n            const newUsers = [...prevState[name]];\n            newUsers[index] = value;\n            return {\n                ...prevState,\n                [name]: newUsers,\n            };\n        });\n    }\n\n    function ResultTable() {\n        if (Query.result)\n            return (\n                <div>\n                    <table className=\"table table-striped\">\n                        <thead>\n                            <tr id=\"header\">\n                                <th>Index</th>\n                                <th>Problem</th>\n                                <th>Rating</th>\n                                <th>Solved by</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {Query.result.problems.map((problem, index) => (\n                                <tr className=\"result-row\" key={index}>\n                                    <td>{`${problem.contestId} ${problem.index}`}</td>\n                                    <th>\n                                        <a\n                                            key={index}\n                                            href={`https://codeforces.com/contest/${problem.contestId}/problem/${problem.index}`}\n                                            target={`_blank`}\n                                            style={{ color: \"black\" }}\n                                        >\n                                            {problem.name}\n                                        </a>\n                                    </th>\n                                    <td>{problem.rating}</td>\n                                    <td>{problem.solved}</td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                </div>\n            );\n        else return <div></div>;\n    }\n\n    function InvalidHandles() {\n        if (Query.result && Query.result.invalidHandles.length) {\n            let invalidstr = \"\";\n            Query.result.invalidHandles.forEach((invalidhandle) => {\n                if (invalidhandle.length) invalidstr += `${invalidhandle},`;\n            });\n            invalidstr = invalidstr.substr(0, invalidstr.length - 1);\n            return <strong>IGNORING INVALID HANDLE(S):{invalidstr}</strong>;\n        } else return <div></div>;\n    }\n\n    function Msg() {\n        if (\n            Query.result &&\n            Query.result.isless === 1 &&\n            Query.result.problems.length > 0\n        )\n            return <strong>THATS ALL YOU HAVE TO DO!!</strong>;\n        else if (\n            Query.result &&\n            Query.result.isless === 1 &&\n            Query.result.problems.length === 0\n        )\n            return (\n                <strong>\n                    FOR THIS QUERY, YOU ARE AT PAR WITH YOUR FRIENDS!!\n                </strong>\n            );\n        else return <div></div>;\n    }\n\n    const animatedComponents = makeAnimated();\n\n    return (\n        <div>\n            <div className=\"form-group row\">\n                <label className=\"col-sm-5 col-form-label\">Handle :</label>\n                <div className=\"col-sm mblscr\" id=\"sep\">\n                    <Usersform\n                        name=\"users\"\n                        users={Query.users}\n                        onChange={onUserChange}\n                        onAddButton={(event) => onUserAddButton(event, \"users\")}\n                    />\n                </div>\n                <label className=\"col-sm-5 col-form-label\">\n                    Friend's Handle :\n                </label>\n                <div className=\"col-sm mblscr\" id=\"sep\">\n                    <Usersform\n                        name=\"friends\"\n                        users={Query.friends}\n                        onChange={onUserChange}\n                        onAddButton={(event) =>\n                            onUserAddButton(event, \"friends\")\n                        }\n                    />\n                </div>\n            </div>\n            <div className=\"form\">\n                <form onSubmit={onSearchSubmit}>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-5 col-form-label\">\n                            Tags :\n                        </label>\n                        <div className=\"col-sm-4\" id=\"sep\">\n                            <Select\n                                isMulti={true}\n                                autosize={true}\n                                isSearchable={true}\n                                components={animatedComponents}\n                                onChange={onTagListChange}\n                                options={Query.tags}\n                            />\n                        </div>\n                        <label className=\"col-sm-5 col-form-label\">\n                            BaseRound :\n                        </label>\n                        <div className=\"col-sm-4\" id=\"sep\">\n                            <Formfield\n                                name=\"roundQuery\"\n                                value={Query.roundQuery}\n                                onChange={onNumberChange}\n                            />\n                        </div>\n                        <label className=\"col-sm-5 col-form-label\">\n                            Number of problems :\n                        </label>\n                        <div className=\"col-sm-4\" id=\"sep\">\n                            <Formfield\n                                name=\"nopQuery\"\n                                value={Query.nopQuery}\n                                onChange={onNumberChange}\n                            />\n                        </div>\n                        <label className=\"col-sm-5 col-form-label\">\n                            Minimum Rating :\n                        </label>\n                        <div className=\"col-sm-4\" id=\"sep\">\n                            <Formfield\n                                name=\"lbQuery\"\n                                value={Query.lbQuery}\n                                onChange={onNumberChange}\n                            />\n                        </div>\n                        <label className=\"col-sm-5 col-form-label\">\n                            Maximum Rating :\n                        </label>\n                        <div className=\"col-sm-4\" id=\"sep\">\n                            <Formfield\n                                name=\"ubQuery\"\n                                value={Query.ubQuery}\n                                onChange={onNumberChange}\n                            />\n                        </div>\n                    </div>\n                    <div style={{ marginTop: `3px`, textAlign: `center` }}>\n                        <button\n                            className=\"query btn btn-warning\"\n                            style={{ color: `white` }}\n                            type=\"submit\"\n                        >\n                            Generate List\n                        </button>\n                    </div>\n                </form>\n            </div>\n\n            <div style={{ textAlign: `center` }}>\n                <InvalidHandles></InvalidHandles>\n                <ResultTable></ResultTable>\n                <Msg></Msg>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <div>\n        <header>\n            <h1>Competitive Programming Guide</h1>\n        </header>\n        <App />\n    </div>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}